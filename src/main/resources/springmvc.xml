<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

    <!-- 1.首先配置springmvc最基本的组件的扫描注解基本包,只扫描两个，默认的过滤器关掉 -->
    <context:component-scan base-package="cn.scuec.major_adjust_system." use-default-filters="false">
    	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
  		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>
    
    <!-- 2.要为我们springmvc的默认的视图解析器配置前后缀 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	<property name="prefix" value="/WEB-INF/jsp/"></property>
    	<property name="suffix" value=".jsp"></property>
    </bean>
    
    <!-- 3.最重要的一个综合的注解， 帮助注入到ioc容器的多种bean -->
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" />
    
   <!-- 以.html为后缀名访问，默认返回数据类型是 text/html， 所以要修改返回的数据类型 -->
	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="mediaTypes">
			<map>
				<entry key="html" value="application/json;charset=UTF-8" />
			</map>
		</property>
	</bean>
    
    <!-- 4.对静态资源(js,css,jepg等)的处理的注解 -->
    <mvc:default-servlet-handler/>
    
    <mvc:resources location="css/" mapping="css/**"></mvc:resources>
    <mvc:resources location="images/" mapping="images/**"></mvc:resources>
    
    <bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 上传文件大小上限，单位为字节（10MB） -->
        <property name="maxUploadSize">  
            <value>10485760</value>  
        </property>  
        <!-- 请求的编码格式，必须和jSP的pageEncoding属性一致，以便正确读取表单的内容，默认为ISO-8859-1 -->
        <property name="defaultEncoding">
            <value>UTF-8</value>
        </property>
    </bean>
    
    <!-- 登录请求拦截器 -->
    <mvc:interceptors>
		<mvc:interceptor>
			<!-- 拦截所有mvc控制器 -->
			<mvc:mapping path="/**"/>
			<!-- mvc:exclude-mapping是另外一种拦截，它可以在你后来的测试中对某个页面进行不拦截，这样就不用在
				LoginInterceptor的preHandler方法里面获取不拦截的请求uri地址了(优选) -->
			<mvc:exclude-mapping path="/login" />
			<bean class="cn.scuec.major_adjust_system.interceptor.LoginInterceptor"></bean>			
		</mvc:interceptor>
	</mvc:interceptors>
	

</beans>
